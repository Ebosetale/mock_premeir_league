{
  "openapi": "3.0.0",
  "info": {
    "title": "Node-Typescript API",
    "version": "1.0.0",
    "description": "A sample API"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/auth/signup/": {
      "post": {
        "description": "sign up user to application",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "description": "sign up body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchema"
              },
              "example": {
                "email": "test.user@mail.com",
                "password": "test_test"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "user successfuly signed in",
            "content": {
              "appication/json": {
                "example": {
                  "status": 200,
                  "logged": true,
                  "message": "Sign in successfull!!"
                }
              }
            }
          },
          "400": {
            "description": "sign in failed",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "logged": false,
                  "message": "Email already exists"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login/": {
      "post": {
        "description": "Login user to application",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "description": "login body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchema"
              },
              "example": {
                "email": "test.user@mail.com",
                "password": "test_test"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "user successfuly logged",
            "content": {
              "appication/json": {
                "example": {
                  "status": 200,
                  "logged": true,
                  "message": "Successfully logged!"
                }
              }
            }
          },
          "401": {
            "description": "Not logged, invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "logged": false,
                  "message": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fixtures/{page}/{status}": {
      "get": {
        "description": "Get all stored fixtures in Database",
        "tags": [
          "fixtures"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "status",
            "description": "fixture status. can be all, pending or completed",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "page",
            "description": "page",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of fixtures",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/Fixture/FixtureSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/Fixture/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fixtures": {
      "post": {
        "description": "Create new Fixture",
        "tags": [
          "fixtures"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "description": "fixture creation request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fixtureSchema"
              },
              "example": {
                "title": "West Ham United vs Manchester City new,",
                "time": "2019-11-07T23:00:00.000Z,",
                "category": "English,",
                "status": "pending,",
                "tags": "football, premier league, Mcty"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return created fixture",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/fixtureSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Modify an existing fixture",
        "tags": [
          "fixtures"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "description": "upgrade fixture role to admin",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fixtureSchema"
              },
              "example": {
                "title": "West Ham United vs Manchester City",
                "time": 1170
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return updated fixture",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/fixtureSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fixtures/search": {
      "post": {
        "description": "search Fixture",
        "tags": [
          "fixtures"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "description": "fixture search request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fixtureSchema"
              },
              "example": {
                "category": "English,",
                "status": "pending,",
                "tags": "football, premier league, Mcty"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return searched fixture",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/fixtureSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fixtures/{id}": {
      "get": {
        "description": "Get fixture by fixtureId",
        "tags": [
          "fixtures"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique fixtureId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return fixture by id",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/fixtureSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete fixture by fixtureId",
        "tags": [
          "fixtures"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique fixtureId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return deleted fixture",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/fixtureSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/teams/{page}": {
      "get": {
        "description": "Get stored teams in Database.",
        "tags": [
          "teams"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "page",
            "description": "the page number",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Teams",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Teams"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/teams": {
      "post": {
        "description": "Create new Team",
        "tags": [
          "teams"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "description": "team creation request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamSchema"
              },
              "example": {
                "name": "Crystal Palace",
                "email": "c.palace@mail.com",
                "address": "london"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return created team",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TeamSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/teams/{id}": {
      "put": {
        "description": "update team information",
        "tags": [
          "teams"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update team information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamSchema"
              },
              "example": {
                "name": "Crystal Palace",
                "email": "c.palace@mail.com",
                "address": "london"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return updated team",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TeamSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Get team by teamId",
        "tags": [
          "teams"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return team by id",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TeamSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete team by teamId",
        "tags": [
          "teams"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return deleted team",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TeamSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/teams/search": {
      "post": {
        "description": "Search Team",
        "tags": [
          "teams"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "description": "team search request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamSchema"
              },
              "example": {
                "name": "Crystal Palace",
                "email": "c.palace@mail.com",
                "address": "london"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "return searched team",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TeamSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users": {
      "get": {
        "description": "Get all stored users in Database",
        "tags": [
          "users"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of users",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Users"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create new User",
        "tags": [
          "users"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "description": "upgrade user role to admin",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchema"
              },
              "example": {
                "name": "userName",
                "email": "test.user@mail.com"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return updated user",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}": {
      "get": {
        "description": "Get user by userId",
        "tags": [
          "users"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return user by id",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete user by userId",
        "tags": [
          "users"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return deleted user",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "FixtureSchema": {
        "required": [
          "title",
          "category",
          "venue",
          "time",
          "status",
          "url",
          "score",
          "url",
          "tags"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "venue": {
            "type": "string"
          },
          "status": {
            "type": "FixtureStatus"
          },
          "time": {
            "type": "string",
            "format": "date"
          },
          "score": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "tags": {
            "type": "string"
          }
        }
      },
      "Fixtures": {
        "type": "array",
        "items": {
          "$ref": "#/components/Fixture/FixtureSchema"
        }
      },
      "TeamSchema": {
        "required": [
          "email",
          "name",
          "stadium",
          "points",
          "memberCount",
          "netWorth"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "stadium": {
            "type": "string"
          },
          "points": {
            "type": "number"
          },
          "memberCount": {
            "type": "number"
          },
          "netWorth": {
            "type": "number"
          }
        }
      },
      "Teams": {
        "type": "array",
        "items": {
          "$ref": "#/components/Team/TeamSchema"
        }
      },
      "UserSchema": {
        "required": [
          "email",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "passwordResetToken": {
            "type": "string"
          },
          "passwordResetExpires": {
            "type": "string",
            "format": "date"
          },
          "tokens": {
            "type": "array"
          }
        }
      },
      "Users": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserSchema"
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "properties": {
          "status": {
            "type": "integer",
            "description": "HTTP status code",
            "example": 200
          },
          "message": {
            "type": "string",
            "description": "Error description",
            "example": "User created"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-access-token"
      }
    }
  },
  "tags": []
}